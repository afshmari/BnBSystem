{{define "base"}}
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Reservation</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"
              integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.3/dist/css/datepicker-bs5.min.css">
        <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
        <link rel="stylesheet" type="text/css" href="../html-source/static/css/styles.css">
    </head>
    <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark border-bottom border-bottom-dark fixed-top">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">Navbar</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
                    aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/about">About</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/contact">Contact Us</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/search-availability">Book Now</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button"
                           data-bs-toggle="dropdown" aria-expanded="false">
                            Rooms
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                            <li><a class="dropdown-item" href="/presidential-suit">Presidential Suite</a></li>
                            <li><a class="dropdown-item" href="/deluxe-suit">Deluxe Room</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    {{block "content" .}}
    {{end}}



    <div class="row footer">
        <div class="col">

        </div>
        <div class="col">
            left
        </div>
        <div class="col">
            middle
        </div>
        <div class="col">
            right
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
            integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"
            integrity="sha384-fbbOQedDUMZZ5KreZpsbe1LCZPVmfTnH7ois6mU1QK+m14rQ1l2bGBq41eYeM/fS"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.3/dist/js/datepicker-full.min.js"></script>
    <script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    {{block "js" .}}

    {{end}}

    <script>

        attention = prompt();
        (() => {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        })()

        document.getElementById("colorButton").addEventListener("click",function (){

    let html = `
     <form id="check-availability-form" action="" method="post" novalidate class="needs-validation">
      <div class="form-row">
        <div class="col">
          <div class="form-group row" id="reservation-dates-model">
            <div class="col">
              <input disabled required class="form-control" type="text" name="start" id="start" placeholder="Check-in">
            </div>
            <div class="col">
              <input disabled required class="form-control" type="text" name="end" id="end" placeholder="Check-out">
            </div>
          </div>
        </div>
      </div>
    </form>
    `
            attention.custom({msg: html, title:"Choose your dates"})

        })

        const elem = document.getElementById('reservation-dates');
        const rangepicker = new DateRangePicker(elem, {
            format: "yyyy-mm-dd"
        });

        function notify(msg, msgtype) {
            notie.alert({
                type: msgtype,
                text: msg,
            })
        }
        function  notifyModel(title, text, icon,confirmationButton){
            Swal.fire({
                title: title,
                html: text,
                icon: icon,
                confirmButtonText: confirmationButton
            })
        }

        function prompt(){
            let toast = function (c){
                const {
                    msg ="",
                    icon = "success",
                    position = "top-end",
                } =c;
                const Toast = Swal.mixin({
                    toast: true,
                    title: msg,
                    position: position,
                    icon: icon,
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({ })
            }
            let success = function (c){
                const {
                    msg = "",
                    title = "",
                    footer = "",
                } = c;
                Swal.fire({
                    icon: 'success',
                    title: title,
                    text: msg,
                    footer: footer
                })
            }
            let error = function (c){
                const {
                    msg = "",
                    title = "",
                    footer = "",
                } = c;
                Swal.fire({
                    icon: 'error',
                    title: title,
                    text: msg,
                    footer: footer
                })
            }

            async function custom (c){
                const {
                    msg = "",
                    title = "",
                } = c;

                const { value: formValues } = await Swal.fire({
                    title: title,
                    html:msg,
                    showCancelButton:  true,
                    focusConfirm: false,
                    willOpen:()=>{
                        const elem = document.getElementById("reservation-dates-model")
                        const rp = new DateRangePicker(elem,{
                            format: "yyyy-mm-dd",
                            showOnFocus: true,
                        })
                    },
                    preConfirm: () => {
                        return [
                            document.getElementById('start').value,
                            document.getElementById('end').value
                        ]
                    },
                    didOpen:()=>{
                        document.getElementById("start").removeAttribute("disabled")
                        document.getElementById("end").removeAttribute("disabled")
                    }
                })

                if (formValues) {
                    Swal.fire(JSON.stringify(formValues))
                }
            }

            return{
                toast: toast,
                success: success,
                error: error,
                custom: custom,
            }
        }

    </script>


    </body>
    </html>

{{end}}

